<!DOCTYPE html>
<html lang="en" data-theme="light">
<head>
  <!-- Font Awesome for icons -->
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
  <!-- Google Fonts: Inter -->
  <link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Inter:wght@400;600;700&display=swap">
  <link rel="stylesheet" href="/css/my-menus.css">
  <title>My Menus</title>
</head>
<body>
  <!-- Hero Section -->
  <section class="hero">
    <a href="#" id="user-icon" class="user-icon"><i class="fas fa-user"></i></a>
    <nav>
      <a href="/my-menus" class="active">My Menus</a>
      <a href="/orders">Orders</a>
      <a href="/profile">Profile</a>
    </nav>
  </section>

  <!-- Logout Modal -->
  <dialog id="logout-modal" class="logout-dialog">
    <article>
      <a href="#" class="close">×</a>
      <h2>Logout</h2>
      <form action="/logout" method="POST">
        <button type="submit">Confirm Logout</button>
      </form>
    </article>
  </dialog>

  <!-- Menus Section -->
  <section id="menus">
    <% if (currentUser && currentUser.restaurantPhoto) { %>
      <img src="<%= currentUser.restaurantPhoto %>" alt="Restaurant Photo" class="restaurant-photo">
    <% } %>
    
    <div class="menu-grid">
      <% if (menus.length > 0) { %>
        <% menus.forEach(menu => { %>
          <div class="menu-card">
            <div class="menu-header">
              <h3 class="menu-title"><%= menu.title %></h3>
            </div>
            <p class="menu-categories"><%= menu.categories.map(cat => cat.name).join(', ') %></p>
            
            <div class="menu-actions">
              <a href="/menu/<%= menu.link %>"><i class="fas fa-external-link-alt"></i> View Public Link</a>
              <a href="/edit-menu/<%= menu._id %>"><i class="fas fa-edit"></i> Edit</a>
              <div class="mode-selector">
                <label>Mode:</label>
                <select onchange="updateMenuMode('<%= menu._id.toString() %>', this.value)">
                  <option value="view-only" <%= menu.mode === 'view-only' ? 'selected' : '' %>>View-only</option>
                  <option value="order" <%= menu.mode === 'order' ? 'selected' : '' %>>Order</option>
                </select>
              </div>
            </div>

            <!-- Tables Section -->
            <div class="tables-section">
              <h3>Tables</h3>
              
              <!-- List existing tables -->
              <ul class="tables-list">
                <% tables.filter(t => t.menu.toString() === menu._id.toString()).forEach(table => { %>
                  <li class="table-item">
                    <div class="table-info">
                      <h4>Table <%= table.number %></h4>
                      <div class="qr-link-container">
                        <span class="qr-link-label">QR Link:</span>
                        <a href="<%= table.qrLink %>" class="qr-link" title="<%= table.qrLink %>">View Menu</a>
                      </div>
                    </div>
                    <div class="qr-code-container">
                      <img src="" alt="QR Code for Table <%= table.number %>" class="qr-code" data-qrlink="<%= table.qrLink %>">
                      <button class="download-qr" data-qrlink="<%= table.qrLink %>">Download QR</button>
                    </div>
                    <div class="table-actions">
                      <form action="/delete-table/<%= table._id %>" method="POST">
                        <button type="submit" class="delete-btn" onclick="return confirm('Are you sure you want to remove this table?');">
                          <i class="fas fa-trash-alt"></i>
                        </button>
                      </form>
                    </div>
                  </li>
                <% }) %>
                <% if (tables.filter(t => t.menu.toString() === menu._id.toString()).length === 0) { %>
                  <li class="table-item">No tables assigned yet.</li>
                <% } %>
              </ul>

              <!-- Add new tables -->
              <div class="add-tables-form">
                <form action="/create-tables/<%= menu._id %>" method="POST">
                  <input type="number" name="tableCount" placeholder="Number of Tables" min="1" required>
                  <button type="submit">Add Tables</button>
                </form>
              </div>
            </div>

            <!-- Delete menu button -->
            <div class="delete-menu-btn">
              <form action="/delete-menu/<%= menu._id %>" method="POST">
                <button type="submit" onclick="return confirm('Are you sure you want to delete this menu?');">
                  <i class="fas fa-trash"></i> Delete Menu
                </button>
              </form>
            </div>
          </div>
        <% }) %>
      <% } else { %>
        <div class="create-menu-card">
          <a href="/create-menu"><i class="fas fa-plus"></i> Create New Menu</a>
        </div>
      <% } %>

      <!-- Always show create menu card if there are existing menus -->
      <% if (menus.length > 0) { %>
        <div class="create-menu-card">
          <a href="/create-menu"><i class="fas fa-plus"></i> Create New Menu</a>
        </div>
      <% } %>
    </div>
  </section>

  <!-- Footer -->
  <footer>
    <div class="footer-content">
      <div class="social-links">
        <a href="#"><i class="fab fa-facebook-f"></i></a>
        <a href="#"><i class="fab fa-twitter"></i></a>
        <a href="#"><i class="fab fa-instagram"></i></a>
        <a href="#"><i class="fab fa-linkedin-in"></i></a>
      </div>
      <div class="contact-info">
        <p><i class="fas fa-envelope"></i> info@qr-table.com</p>
        <p><i class="fas fa-phone"></i> +1 (555) 123-4567</p>
      </div>
    </div>
    <p>© 2025 QR Menu App. All rights reserved. | <a href="/privacy-policy">Privacy Policy</a> | <a href="#" id="support-link">Support</a></p>
  </footer>

  <!-- Support Modal -->
  <dialog id="support-modal">
    <article>
      <a href="#" class="close">×</a>
      <p>For all support issues, please email <a href="mailto:info@qr-table.com">info@qr-table.com</a></p>
    </article>
  </dialog>

  <!-- JavaScript -->
  <script>
    const userIcon = document.getElementById('user-icon');
    const logoutModal = document.getElementById('logout-modal');
    const logoutCloseBtn = document.querySelector('#logout-modal .close');
    const supportLink = document.getElementById('support-link');
    const supportModal = document.getElementById('support-modal');
    const supportCloseBtn = document.querySelector('#support-modal .close');

    userIcon.addEventListener('click', (e) => {
      e.preventDefault();
      logoutModal.showModal();
    });

    logoutCloseBtn.addEventListener('click', (e) => {
      e.preventDefault();
      logoutModal.close();
    });

    supportLink.addEventListener('click', (e) => {
      e.preventDefault();
      supportModal.showModal();
    });

    supportCloseBtn.addEventListener('click', (e) => {
      e.preventDefault();
      supportModal.close();
    });

    // Define updateMenuMode function
    async function updateMenuMode(menuId, mode) {
      console.log('Updating menu:', menuId, 'to mode:', mode); // Debug log
      try {
        const response = await fetch(`/menus/${menuId}/mode`, {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify({ mode })
        });
        if (!response.ok) {
          throw new Error(`Server responded with ${response.status}`);
        }
        console.log('Mode updated successfully'); // Success log
      } catch (error) {
        console.error('Error updating mode:', error);
        alert('Failed to update menu mode.');
      }
    }

    // QR Code generation and download functionality
    document.addEventListener('DOMContentLoaded', function() {
      // Generate QR codes for all tables
      const qrCodeImages = document.querySelectorAll('.qr-code');
      qrCodeImages.forEach(img => {
        const qrLink = img.getAttribute('data-qrlink');
        // Pass the full QR link to the server
        fetch(`/generate-qr/${encodeURIComponent(qrLink)}`)
          .then(response => response.json())
          .then(data => {
            img.src = data.qrCodeDataUrl;
          })
          .catch(error => {
            console.error('Error fetching QR code:', error);
          });
      });

      // Download QR code functionality
      const downloadButtons = document.querySelectorAll('.download-qr');
      downloadButtons.forEach(button => {
        button.addEventListener('click', function() {
          const qrLink = this.getAttribute('data-qrlink');
          const qrImage = document.querySelector(`.qr-code[data-qrlink="${qrLink}"]`);
          
          if (qrImage && qrImage.src) {
            // Extract table ID from the QR link
            const tableIdMatch = qrLink.match(/table=([^&]+)/);
            const tableId = tableIdMatch ? tableIdMatch[1] : 'unknown';
            
            // Create a temporary link to download the image
            const link = document.createElement('a');
            link.href = qrImage.src;
            link.download = `qr-code-table-${tableId}.png`;
            document.body.appendChild(link);
            link.click();
            document.body.removeChild(link);
          }
        });
      });
    });
  </script>
</body>
</html>